/* Tools */
/*@font-face {
  font-family: 'Segoe UI';
  src: url('webfont.eot'); */
/* IE9 Compat Modes */
                                                 /*
src: url('webfont.eot?#iefix') format('embedded-opentype'), */
/* IE6-IE8 */
                                                                           /*
url('webfont.woff2') format('woff2'), */
/* Super Modern Browsers */
                                                                   /*
url('webfont.woff') format('woff'), */
/* Pretty Modern Browsers */
                                                                  /*
url('webfont.ttf')  format('truetype'), */
/* Safari, Android, iOS */
                                                                    /*
url('webfont.svg#svgFontName') format('svg'); */
/* Legacy iOS */
                                                                  /*
}*/
/*@font-face {
  font-family: "Segoe UI";
  src: url('../fonts/Tahoma-Regular.eot'); /!* IE9 Compat Modes *!/
}
@font-face {
  font-family: "Tahoma-Bold";
  src: url('../fonts/Tahoma-Bold.eot'); /!* IE9 Compat Modes *!/
}*/
@import url(http://fonts.googleapis.com/css?family=Lato:300,400,900);
@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,300,700,600);
.main-header:before, .list-items:before, .user:before, .msg-input:before, .main-header:after, .list-items:after, .user:after, .msg-input:after {
  content: " ";
  display: table;
}
.main-header:after, .list-items:after, .user:after, .msg-input:after {
  clear: both;
}

/* Base */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

*, *:before, *:after {
  box-sizing: border-box;
}

body, html {
  height: 100%;
}

body {
  background-color: #F2F2F2;
  font-family: "Lato", sans-serif;
}

ul li {
  list-style: none;
}

ul {
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
}

select {
  border: none;
}

h1, p {
  margin: 0;
  padding: 0;
}

hr {
  /*  margin: 0;
    padding: 0;
    display: block;
    height: 1px;
    border: 0; border-top: 1px solid #A6A6A6;*/
}

img {
  max-width: 100%;
}

textarea {
  resize: none;
}

/* Modules */
.wrapper {
  height: 100%;
}

.container {
  max-width: 93.75rem;
  width: 90%;
  margin: 0 auto;
}

.main-header {
  background-color: #7D77B2;
  box-shadow: 0px 2px 5px #888888;
}
.main-header__logo {
  padding: 0.75rem 1.25rem;
  display: inline-block;
}
.main-header__user {
  float: right;
}
.main-header__project {
  margin-left: 1.875rem;
  display: inline-block;
  vertical-align: top;
  font-family: "Open Sans", sans-serif;
  color: #fff;
  font-size: 1.125rem;
  line-height: 70px;
  position: relative;
  padding: 0 1.25rem;
}
.main-header__project:before, .main-header__project:after {
  content: " ";
  position: absolute;
  width: 1px;
  height: 44px;
  background-color: #6C6A93;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}
.main-header__project:before {
  top: 50%;
  left: 0;
}
.main-header__project:after {
  top: 50%;
  right: 0;
}

.logo img {
  width: 7.5rem;
  height: 2.875rem;
}

.content {
  margin-top: 6.25rem;
}
.content__items {
  margin-top: 5%;
  padding-left: 6.25rem;
}
.content__title {
  font-family: "Lato", sans-serif;
  color: #7e8287;
  font-weight: 300;
  text-align: center;
}
.content__login {
  text-align: center;
  padding-top: 1.875rem;
}

.list__item {
  position: relative;
  width: 50%;
  float: left;
  padding: 0 2.5rem;
  padding-left: 2.5rem;
  margin-bottom: 0.75rem;
  font-family: "Lato", sans-serif;
  color: #7e8287;
  font-size: 1.5625rem;
}
.list__item .sub-text {
  font-size: 0.9375rem;
  font-weight: 300;
  padding-top: 1.25rem;
}
.list__item i {
  color: #7d77b2;
  font-size: 1.875rem;
  position: absolute;
  top: 0%;
  left: 0;
}

.btn-login--github, .btn-enter, .btn-login--trello, .btn-login--bitbucket {
  border: none;
  outline: none;
  background-color: #7D77B2;
  font-family: "Lato", sans-serif;
  color: #fff;
  font-size: 1.25rem;
  border-radius: 1.75rem;
  position: relative;
}

.btn-login--github {
  padding: 0.9375rem 1.5625rem 0.9375rem 4.125rem;
  margin-right: 1.25rem;
  background-color: #666666;
}
.btn-login--github i {
  font-size: 2.375rem;
  position: absolute;
  top: 50%;
  left: 10%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.btn-enter {
  padding: 0.625rem 1.5625rem;
}

.btn-login--trello {
  padding: 0.9375rem 1.5625rem 0.9375rem 4.125rem;
  background-color: #0079BF;
  margin-right: 1.25rem;
}
.btn-login--trello i {
  font-size: 2.375rem;
  position: absolute;
  top: 50%;
  left: 10%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.btn-login--bitbucket {
  padding: 0.9375rem 1.5625rem 0.9375rem 4.125rem;
  background-color: #205081;
}
.btn-login--bitbucket i {
  font-size: 2.375rem;
  position: absolute;
  top: 50%;
  left: 10%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.user__avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 3px solid #fff;
  display: inline-block;
  margin-right: 0.625rem;
  vertical-align: middle;
}
.user__avatar img {
  border-radius: 50%;
}
.user__name {
  font-family: "Lato", sans-serif;
  color: #fff;
  font-weight: 300;
  display: inline-block;
}
.user__name--team {
  color: #000;
  display: block;
  text-align: center;
}

.project-select {
  width: 50%;
  background-color: #fff;
  text-align: center;
  padding: 2.5rem 0;
  box-shadow: 2px 3px 8px #888888;
  position: absolute;
  top: 28%;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}
.project-select__select {
  width: 85%;
  margin: 0 auto;
  margin-bottom: 2.5rem;
}
.project-select__title {
  font-family: "Open Sans", sans-serif;
  font-weight: bold;
  margin-bottom: 1.875rem;
  color: #30333A;
}
.project-select__btn {
  margin-top: 5rem;
}
.project-select__controls input[type="radio"] {
  display: none;
}
.project-select__controls label {
  font-family: "Open Sans", sans-serif;
  font-size: 1rem;
  color: #30333A;
  margin-right: 3.75rem;
}
.project-select__controls input[type="radio"] + label span {
  display: inline-block;
  width: 28px;
  height: 28px;
  margin-right: 0.625rem;
  vertical-align: middle;
  cursor: pointer;
  border-radius: 50%;
  border: 2px solid #A8AAAD;
  position: relative;
  background-color: #fff;
}
.project-select__controls input[type="radio"]:checked + label span:after {
  content: ' ';
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: #7D77B2;
}

.user-comment {
  margin: 1.25rem 0;
}
.user-comment__avatar {
  width: 42px;
  height: 42px;
  display: inline-block;
  vertical-align: middle;
  margin-right: 0.9375rem;
}
.user-comment__avatar img {
  border-radius: 50%;
  border: 1px solid #ccc;
}
.user-comment__time {
  font-weight: 300;
  font-family: "Open Sans", sans-serif;
  color: #72777C;
  font-size: 0.75rem;
  float: right;
  line-height: 40px;
}
.user-comment__name {
  font-weight: 600;
  font-family: "Open Sans", sans-serif;
  color: #72777C;
  display: inline-block;
  vertical-align: middle;
}
.user-comment__body {
  word-wrap: break-word;
  font-size: 0.8125rem;
  line-height: 16px;
  font-family: "Open Sans", sans-serif;
  margin-top: 1.25rem;
}

.textarea {
  width: 100%;
  height: 80px;
  margin-bottom: 1.25rem;
}

.users-comments__chat {
  position: absolute;
  bottom: 2%;
  width: 88%;
}

.select {
  text-align: left;
  position: relative;
}
.select__title {
  font-family: "Open Sans", sans-serif;
  font-size: 0.875rem;
  color: #999999;
  border: 2px solid #A8AAAD;
  border-radius: 10px;
  padding: 0.9375rem;
  cursor: pointer;
}
.select__items {
  display: none;
  color: #5F6477;
  font-family: "Open Sans", sans-serif;
  font-size: 0.875rem;
  box-shadow: 2px 3px 8px #888888;
  position: absolute;
  width: 100%;
  z-index: 100;
  background-color: #fff;
  height: 15.625rem;
  overflow-y: scroll;
}

.select__item {
  padding: 0.75rem 1.875rem;
  cursor: pointer;
}
.select__item:hover {
  background-color: rgba(152, 158, 175, 0.1);
  color: #4DC4EA;
}

.item__desc {
  opacity: 0.5;
}

.item__tasks {
  font-weight: 300;
  font-size: 0.75rem;
  float: right;
}

.task {
  margin-bottom: 2.5rem;
  margin-top: 1.875rem;
}
.task__title {
  color: #7D77B2;
  font-family: "Open Sans", sans-serif;
  font-size: 0.875rem;
  width: 75%;
}
.task__to {
  color: #72777C;
  font-family: "Open Sans", sans-serif;
  font-size: 0.75rem;
  float: right;
}
.task__content {
  color: #848484;
  line-height: 1.5;
}

.tasks {
  width: 25rem;
  height: 100%;
  position: relative;
  display: none;
}

.task__btn {
  width: 100%;
  padding: 0 1.25rem 1.25rem 1.25rem;
  position: absolute;
  bottom: 0;
  background-color: #fff;
  z-index: 10;
  text-align: center;
  padding: 1.25rem 0;
  box-shadow: 0px -20px 30px 0px white;
}

.task__container {
  width: 100%;
  position: absolute;
  z-index: 1;
  bottom: 0;
  padding: 5.4375rem 1.25rem 11.25rem 1.25rem;
  overflow: auto;
  height: 100%;
}

.playground__title {
  color: #34333D;
  font-family: "Open Sans", sans-serif;
  font-weight: 300;
  text-align: center;
  padding: 0.625rem 0 2.8125rem 0;
  width: 80%;
  margin: 0 auto;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.playground__cards {
  text-align: center;
}
.playground__cards .flip-container {
  margin-bottom: 4rem;
}
.playground__users {
  padding: 0.625rem 1.25rem;
  background-color: #DBD9D9;
}
.playground__users .user {
  text-align: center;
  display: inline-block;
  margin-right: 1.875rem;
  font-size: 0.8125rem;
}

.card {
  width: 7%;
  text-align: center;
  padding-bottom: 2%;
  background-color: #fff;
  box-shadow: 1px 3px 6px #888888;
  border-radius: 10px;
  position: relative;
  display: inline-block;
  margin-right: 0.625rem;
}
.card__user {
  position: absolute;
  top: -25px;
  left: 50%;
  -webkit-transform: translateX(-39%);
          transform: translateX(-39%);
}
.card__user .user__avatar {
  width: 40px;
  height: 40px;
}
.card__rate {
  color: #7D77B2;
  font-family: "Open Sans", sans-serif;
  font-weight: bold;
  font-size: 1.25rem;
  padding-top: 25%;
}
.card__rate--dis {
  color: #8F9399;
  cursor: pointer;
}
.card__btn {
  border: none;
  outline: none;
  background-color: transparent;
  color: #8E8D8D;
  text-align: center;
  position: absolute;
  bottom: -30px;
  left: 50%;
  -webkit-transform: translateX(-45%);
          transform: translateX(-45%);
}
.card__user-name {
  width: 100%;
  color: #72777C;
  font-family: "Open Sans", sans-serif;
  font-size: 0.5625rem;
  font-weight: 700;
  position: absolute;
  bottom: -28px;
  overflow: hidden;
  white-space: nowrap;
}

.card-select {
  background-color: #DBD9D9;
  padding: 1.25rem;
}

.card-select__cards .card {
  margin-bottom: 0.75rem;
}

.content-wrapper {
  display: table;
  width: 100%;
  height: 100%;
}

.content__header {
  display: table-row;
  height: 1px;
  width: 100%;
}

.main-content {
  width: 100%;
  height: 100%;
  display: table;
  overflow: hidden;
}

.col-1 {
  display: table-cell;
  vertical-align: middle;
}

.main-content__playground {
  display: table;
  width: 100%;
  height: 100%;
}

.main-content__cardSelect {
  height: 1px;
  display: table-row;
}

.col-2 {
  display: table-cell;
  width: 25rem;
}

.chat {
  height: 100%;
  position: relative;
  display: none;
}

.msg-input {
  width: 100%;
  padding: 0 1.25rem 1.25rem 1.25rem;
  position: absolute;
  bottom: 0;
  background-color: #fff;
  z-index: 10;
}
.msg-input .btn-enter {
  float: right;
}
.msg-input .textarea {
  box-shadow: 0px -20px 30px 0px white;
}

.msg-container {
  width: 100%;
  position: absolute;
  z-index: 1;
  bottom: 0;
  padding: 5.4375rem 0rem 11.25rem 1.25rem;
  overflow: auto;
  height: 100%;
}

.content--active {
  display: block;
}

.tab__nav--active {
  position: relative;
  cursor: normal;
}
.tab__nav--active:after {
  content: ' ';
  width: 101%;
  height: 4px;
  background-color: #7D77B2;
  position: absolute;
  bottom: 0;
  left: 0;
}

.tab {
  height: 100%;
  position: relative;
  background-color: #fff;
  box-shadow: 2px 3px 8px #888888;
}
.tab__nav {
  background-color: #F2F2F2;
  z-index: 100;
  width: 100%;
  position: absolute;
}
.tab__nav li {
  text-transform: uppercase;
  width: 50%;
  text-align: center;
  cursor: pointer;
  font-weight: bold;
  font-size: 0.6875rem;
  font-family: "Open Sans", sans-serif;
  float: left;
  color: #30333A;
  padding: 1.25rem 2.8125rem;
  border: 1px solid #D9D9DB;
}

.tab__content {
  height: 100%;
}

/* Media*/
/* entire container, keeps perspective */
.flip-container {
  -webkit-perspective: 1000;
          perspective: 1000;
  display: inline-block;
}

/* flip the pane when hovered */
.flip-container:hover .flipper, .flip-container.hover .flipper {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}

.flip-container, .front, .back {
  width: 100px;
  height: 100px;
}

/* flip speed goes here */
.flipper {
  transition: 0.6s;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  position: relative;
}

/* hide back of pane during swap */
.front, .back {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
}

/* front pane, placed above back */
.front {
  z-index: 2;
  /* for firefox 31 */
  -webkit-transform: rotateY(0deg);
          transform: rotateY(0deg);
}

/* back, initially hidden pane */
.back {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}

.flip-container .card {
  width: 70%;
  height: 80px;
}
.flip-container .card-bg {
  background-color: #7D77B2;
}

.main-header__user .user {
  position: relative;
  padding: 1rem 1.25rem 0 0.625rem;
  height: 4.5625rem;
}
.main-header__user .user:hover {
  background-color: #6660a0;
}
.main-header__user .user:hover .user-menu {
  display: block;
}

.user-menu {
  position: absolute;
  display: none;
  width: 100%;
  top: 100%;
  left: 0;
  z-index: 200;
}
.user-menu li {
  text-align: center;
  background-color: #fff;
  padding: 0.625rem;
}
.user-menu li:hover {
  background-color: #ccc;
}
.user-menu a {
  display: block;
  color: #000;
}
.user-menu i {
  margin-right: 5%;
}



/*# sourceMappingURL=data:application/json;base64, */