/* Tools */
/*@font-face {
  font-family: 'Segoe UI';
  src: url('webfont.eot'); */
/* IE9 Compat Modes */
                                                 /*
src: url('webfont.eot?#iefix') format('embedded-opentype'), */
/* IE6-IE8 */
                                                                           /*
url('webfont.woff2') format('woff2'), */
/* Super Modern Browsers */
                                                                   /*
url('webfont.woff') format('woff'), */
/* Pretty Modern Browsers */
                                                                  /*
url('webfont.ttf')  format('truetype'), */
/* Safari, Android, iOS */
                                                                    /*
url('webfont.svg#svgFontName') format('svg'); */
/* Legacy iOS */
                                                                  /*
}*/
/*@font-face {
  font-family: "Segoe UI";
  src: url('../fonts/Tahoma-Regular.eot'); /!* IE9 Compat Modes *!/
}
@font-face {
  font-family: "Tahoma-Bold";
  src: url('../fonts/Tahoma-Bold.eot'); /!* IE9 Compat Modes *!/
}*/
@import url(http://fonts.googleapis.com/css?family=Lato:300,400,900);
@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,300,700,600);
.main-header:before, .list-items:before, .user:before, .msg-input:before, .main-header:after, .list-items:after, .user:after, .msg-input:after {
  content: " ";
  display: table;
}
.main-header:after, .list-items:after, .user:after, .msg-input:after {
  clear: both;
}

/* Base */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

*, *:before, *:after {
  box-sizing: border-box;
}

body, html {
  height: 100%;
}

body {
  background-color: #F2F2F2;
  font-family: "Lato", sans-serif;
}

ul li {
  list-style: none;
}

ul {
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
}

select {
  border: none;
}

h1, p {
  margin: 0;
  padding: 0;
}

hr {
  /*  margin: 0;
    padding: 0;
    display: block;
    height: 1px;
    border: 0; border-top: 1px solid #A6A6A6;*/
}

img {
  max-width: 100%;
}

textarea {
  resize: none;
}

/* Modules */
.wrapper {
  height: 100%;
}

.container {
  max-width: 93.75rem;
  width: 90%;
  margin: 0 auto;
}

.main-header {
  background-color: #7D77B2;
  box-shadow: 0px 2px 5px #888888;
}
.main-header__logo {
  padding: 0.75rem 1.25rem;
  display: inline-block;
}
.main-header__user {
  float: right;
  margin-right: 1.25rem;
  margin-top: 0.625rem;
}
.main-header__project {
  margin-left: 1.875rem;
  display: inline-block;
  vertical-align: top;
  font-family: "Open Sans", sans-serif;
  color: #fff;
  font-size: 1.125rem;
  line-height: 70px;
  position: relative;
  padding: 0 1.25rem;
}
.main-header__project:before, .main-header__project:after {
  content: " ";
  position: absolute;
  width: 1px;
  height: 44px;
  background-color: #6C6A93;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}
.main-header__project:before {
  top: 50%;
  left: 0;
}
.main-header__project:after {
  top: 50%;
  right: 0;
}

.logo img {
  width: 7.5rem;
  height: 2.875rem;
}

.content {
  margin-top: 6.25rem;
}
.content__items {
  margin-top: 5%;
  padding-left: 6.25rem;
}
.content__title {
  font-family: "Lato", sans-serif;
  color: #7e8287;
  font-weight: 300;
  text-align: center;
}
.content__login {
  text-align: center;
  padding-top: 1.875rem;
}

.list__item {
  position: relative;
  width: 50%;
  float: left;
  padding: 0 2.5rem;
  padding-left: 2.5rem;
  margin-bottom: 0.75rem;
  font-family: "Lato", sans-serif;
  color: #7e8287;
  font-size: 1.5625rem;
}
.list__item .sub-text {
  font-size: 0.9375rem;
  font-weight: 300;
  padding-top: 1.25rem;
}
.list__item i {
  color: #7d77b2;
  font-size: 1.875rem;
  position: absolute;
  top: 0%;
  left: 0;
}

.btn-login--github, .btn-enter, .btn-login--trello, .btn-login--bitbucket {
  border: none;
  outline: none;
  background-color: #7D77B2;
  font-family: "Lato", sans-serif;
  color: #fff;
  font-size: 1.25rem;
  border-radius: 1.75rem;
  position: relative;
}

.btn-login--github {
  padding: 0.9375rem 1.5625rem 0.9375rem 4.125rem;
  margin-right: 1.25rem;
  background-color: #666666;
}
.btn-login--github i {
  font-size: 2.375rem;
  position: absolute;
  top: 50%;
  left: 10%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.btn-enter {
  padding: 0.625rem 1.5625rem;
}

.btn-login--trello {
  padding: 0.9375rem 1.5625rem 0.9375rem 4.125rem;
  background-color: #0079BF;
  margin-right: 1.25rem;
}
.btn-login--trello i {
  font-size: 2.375rem;
  position: absolute;
  top: 50%;
  left: 10%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.btn-login--bitbucket {
  padding: 0.9375rem 1.5625rem 0.9375rem 4.125rem;
  background-color: #205081;
}
.btn-login--bitbucket i {
  font-size: 2.375rem;
  position: absolute;
  top: 50%;
  left: 10%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.user__avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 3px solid #fff;
  display: inline-block;
  margin-right: 0.625rem;
  vertical-align: middle;
}
.user__avatar img {
  border-radius: 50%;
}
.user__name {
  font-family: "Lato", sans-serif;
  color: #fff;
  font-weight: 300;
  display: inline-block;
}
.user__name--team {
  color: #000;
  display: block;
  text-align: center;
}

.project-select {
  width: 50%;
  background-color: #fff;
  text-align: center;
  padding: 2.5rem 0;
  box-shadow: 2px 3px 8px #888888;
  position: absolute;
  top: 28%;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}
.project-select__select {
  width: 85%;
  margin: 0 auto;
  margin-bottom: 2.5rem;
}
.project-select__title {
  font-family: "Open Sans", sans-serif;
  font-weight: bold;
  margin-bottom: 1.875rem;
  color: #30333A;
}
.project-select__btn {
  margin-top: 5rem;
}
.project-select__controls input[type="radio"] {
  display: none;
}
.project-select__controls label {
  font-family: "Open Sans", sans-serif;
  font-size: 1rem;
  color: #30333A;
  margin-right: 3.75rem;
}
.project-select__controls input[type="radio"] + label span {
  display: inline-block;
  width: 28px;
  height: 28px;
  margin-right: 0.625rem;
  vertical-align: middle;
  cursor: pointer;
  border-radius: 50%;
  border: 2px solid #A8AAAD;
  position: relative;
  background-color: #fff;
}
.project-select__controls input[type="radio"]:checked + label span:after {
  content: ' ';
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: #7D77B2;
}

.user-comment {
  margin: 1.25rem 0;
}
.user-comment__avatar {
  width: 42px;
  height: 42px;
  display: inline-block;
  vertical-align: middle;
  margin-right: 0.9375rem;
}
.user-comment__avatar img {
  border-radius: 50%;
  border: 1px solid #ccc;
}
.user-comment__time {
  font-weight: 300;
  font-family: "Open Sans", sans-serif;
  color: #72777C;
  font-size: 0.75rem;
  float: right;
  line-height: 40px;
}
.user-comment__name {
  font-weight: 600;
  font-family: "Open Sans", sans-serif;
  color: #72777C;
  display: inline-block;
  vertical-align: middle;
}
.user-comment__body {
  word-wrap: break-word;
  font-size: 0.8125rem;
  line-height: 16px;
  font-family: "Open Sans", sans-serif;
  margin-top: 1.25rem;
}

.textarea {
  width: 100%;
  height: 80px;
  margin-bottom: 1.25rem;
}

.users-comments__chat {
  position: absolute;
  bottom: 2%;
  width: 88%;
}

.select {
  text-align: left;
  position: relative;
}
.select__title {
  font-family: "Open Sans", sans-serif;
  font-size: 0.875rem;
  color: #999999;
  border: 2px solid #A8AAAD;
  border-radius: 10px;
  padding: 0.9375rem;
  cursor: pointer;
}
.select__items {
  display: none;
  color: #5F6477;
  font-family: "Open Sans", sans-serif;
  font-size: 0.875rem;
  box-shadow: 2px 3px 8px #888888;
  position: absolute;
  width: 100%;
  z-index: 100;
  background-color: #fff;
  height: 15.625rem;
  overflow-y: scroll;
}

.select__item {
  padding: 0.75rem 1.875rem;
  cursor: pointer;
}
.select__item:hover {
  background-color: rgba(152, 158, 175, 0.1);
  color: #4DC4EA;
}

.item__desc {
  opacity: 0.5;
}

.item__tasks {
  font-weight: 300;
  font-size: 0.75rem;
  float: right;
}

.task {
  margin-bottom: 2.5rem;
  margin-top: 1.875rem;
}
.task__title {
  color: #7D77B2;
  font-family: "Open Sans", sans-serif;
  font-size: 0.875rem;
  width: 75%;
}
.task__to {
  color: #72777C;
  font-family: "Open Sans", sans-serif;
  font-size: 0.75rem;
  float: right;
}
.task__content {
  color: #848484;
  line-height: 1.5;
}

.tasks {
  width: 25rem;
  height: 100%;
  position: relative;
  display: none;
}

.task__btn {
  width: 100%;
  padding: 0 1.25rem 1.25rem 1.25rem;
  position: absolute;
  bottom: 0;
  background-color: #fff;
  z-index: 10;
  text-align: center;
  padding: 1.25rem 0;
  box-shadow: 0px -20px 30px 0px white;
}

.task__container {
  width: 100%;
  position: absolute;
  z-index: 1;
  bottom: 0;
  padding: 5.4375rem 1.25rem 11.25rem 1.25rem;
  overflow: auto;
  height: 100%;
}

.playground__title {
  color: #34333D;
  font-family: "Open Sans", sans-serif;
  font-weight: 300;
  text-align: center;
  padding: 0.625rem 0 2.8125rem 0;
  width: 80%;
  margin: 0 auto;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.playground__cards {
  text-align: center;
}
.playground__cards .flip-container {
  margin-bottom: 4rem;
}
.playground__users {
  padding: 0.625rem 1.25rem;
  background-color: #DBD9D9;
}
.playground__users .user {
  text-align: center;
  display: inline-block;
  margin-right: 1.875rem;
  font-size: 0.8125rem;
}

.card {
  width: 7%;
  text-align: center;
  padding-bottom: 2%;
  background-color: #fff;
  box-shadow: 1px 3px 6px #888888;
  border-radius: 10px;
  position: relative;
  display: inline-block;
  margin-right: 0.625rem;
}
.card__user {
  position: absolute;
  top: -25px;
  left: 50%;
  -webkit-transform: translateX(-39%);
          transform: translateX(-39%);
}
.card__user .user__avatar {
  width: 40px;
  height: 40px;
}
.card__rate {
  color: #7D77B2;
  font-family: "Open Sans", sans-serif;
  font-weight: bold;
  font-size: 1.25rem;
  padding-top: 25%;
}
.card__rate--dis {
  color: #8F9399;
  cursor: pointer;
}
.card__btn {
  border: none;
  outline: none;
  background-color: transparent;
  color: #8E8D8D;
  text-align: center;
  position: absolute;
  bottom: -30px;
  left: 50%;
  -webkit-transform: translateX(-45%);
          transform: translateX(-45%);
}
.card__user-name {
  width: 100%;
  color: #72777C;
  font-family: "Open Sans", sans-serif;
  font-size: 0.5625rem;
  font-weight: 700;
  position: absolute;
  bottom: -28px;
  overflow: hidden;
  white-space: nowrap;
}

.card-select {
  background-color: #DBD9D9;
  padding: 1.25rem;
}

.card-select__cards .card {
  margin-bottom: 0.75rem;
}

.content-wrapper {
  display: table;
  width: 100%;
  height: 100%;
}

.content__header {
  display: table-row;
  height: 1px;
  width: 100%;
}

.main-content {
  width: 100%;
  height: 100%;
  display: table;
  overflow: hidden;
}

.col-1 {
  display: table-cell;
  vertical-align: middle;
}

.main-content__playground {
  display: table;
  width: 100%;
  height: 100%;
}

.main-content__cardSelect {
  height: 1px;
  display: table-row;
}

.col-2 {
  display: table-cell;
  width: 25rem;
}

.chat {
  height: 100%;
  position: relative;
  display: none;
}

.msg-input {
  width: 100%;
  padding: 0 1.25rem 1.25rem 1.25rem;
  position: absolute;
  bottom: 0;
  background-color: #fff;
  z-index: 10;
}
.msg-input .btn-enter {
  float: right;
}
.msg-input .textarea {
  box-shadow: 0px -20px 30px 0px white;
}

.msg-container {
  width: 100%;
  position: absolute;
  z-index: 1;
  bottom: 0;
  padding: 5.4375rem 0rem 11.25rem 1.25rem;
  overflow: auto;
  height: 100%;
}

.content--active {
  display: block;
}

.tab__nav--active {
  position: relative;
  cursor: normal;
}
.tab__nav--active:after {
  content: ' ';
  width: 101%;
  height: 4px;
  background-color: #7D77B2;
  position: absolute;
  bottom: 0;
  left: 0;
}

.tab {
  height: 100%;
  position: relative;
  background-color: #fff;
  box-shadow: 2px 3px 8px #888888;
}
.tab__nav {
  background-color: #F2F2F2;
  z-index: 100;
  width: 100%;
  position: absolute;
}
.tab__nav li {
  text-transform: uppercase;
  width: 50%;
  text-align: center;
  cursor: pointer;
  font-weight: bold;
  font-size: 0.6875rem;
  font-family: "Open Sans", sans-serif;
  float: left;
  color: #30333A;
  padding: 1.25rem 2.8125rem;
  border: 1px solid #D9D9DB;
}

.tab__content {
  height: 100%;
}

/* Media*/
/* entire container, keeps perspective */
.flip-container {
  -webkit-perspective: 1000;
          perspective: 1000;
  display: inline-block;
}

/* flip the pane when hovered */
.flip-container:hover .flipper, .flip-container.hover .flipper {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}

.flip-container, .front, .back {
  width: 100px;
  height: 100px;
}

/* flip speed goes here */
.flipper {
  transition: 0.6s;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  position: relative;
}

/* hide back of pane during swap */
.front, .back {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
}

/* front pane, placed above back */
.front {
  z-index: 2;
  /* for firefox 31 */
  -webkit-transform: rotateY(0deg);
          transform: rotateY(0deg);
}

/* back, initially hidden pane */
.back {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}

.flip-container .card {
  width: 70%;
  height: 80px;
}
.flip-container .card-bg {
  background-color: #7D77B2;
}



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInRvb2xzL19mb250cy5zY3NzIiwidG9vbHMvX2Z1bmN0aW9ucy5zY3NzIiwiYmFzZS9fbm9ybWFsaXplLnNjc3MiLCJiYXNlL19iYXNlLnNjc3MiLCJ0b29scy9fc2l0ZS1zZXR0aW5ncy5zY3NzIiwibW9kdWxlcy9fY29udGFpbmVyLnNjc3MiLCJtb2R1bGVzL19tYWluLWhlYWRlci5zY3NzIiwibW9kdWxlcy9fbG9nby5zY3NzIiwibW9kdWxlcy9fY29udGVudC5zY3NzIiwibW9kdWxlcy9fbGlzdC1pdGVtcy5zY3NzIiwibW9kdWxlcy9fYnV0dG9ucy5zY3NzIiwibW9kdWxlcy9fdXNlci5zY3NzIiwibW9kdWxlcy9fcHJvamVjdC1zZWxlY3Quc2NzcyIsIm1vZHVsZXMvX3VzZXItY29tbWVudC5zY3NzIiwibW9kdWxlcy9fc2VsZWN0LnNjc3MiLCJtb2R1bGVzL190YXNrcy5zY3NzIiwibW9kdWxlcy9fcGxheWdyb3VuZC5zY3NzIiwibW9kdWxlcy9fY2FyZC5zY3NzIiwibW9kdWxlcy9fY2FyZC1zZWxlY3Quc2NzcyIsIm1vZHVsZXMvX21haW4tcGFnZS5zY3NzIiwibW9kdWxlcy9fY2hhdC5zY3NzIiwibW9kdWxlcy9fdGFiLnNjc3MiLCJzdHlsZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVc7QUFDWDs7OEJBRTZCO0FBQzdCLHVCQUFzQjtpREFDMkI7K0RBQ2E7QUFDOUQsY0FBYTsyRUFDOEQ7eUNBQ25DO0FBQ3hDLDRCQUEyQjttRUFDd0M7dUNBQzdCO0FBQ3RDLDZCQUE0QjtrRUFDc0M7MkNBQ3hCO0FBQzFDLDJCQUEwQjtvRUFDMEM7aURBQ3BCO0FBQ2hELGlCQUFnQjtrRUFDa0Q7SUFDL0Q7QUFDSDs7Ozs7OztJQU9HO0FDS0ssc0VBQTREO0FBQzVELCtFQUFxRTtBQ1gzRTtFQUNFLGNBQVk7RUFDWixnQkFBYztFRlNqQjtBRVBDO0VBQ0UsYUFBVztFRlNkOztBQUVELFdBQVU7QUFDViw2REFB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Q2hDOztBc0JuZ0NEO0VBQ0UsY0FBWTtFdEJzZ0NiOztBQUVELFdBQVU7QUFDViwwQ0FBeUM7QXVCbmhDekM7RUFDRSwyQkFBaUI7VUFBakIsbUJBQWlCO0VBQ2pCLHVCQUFxQjtFdkJxaEN0Qjs7QUFFRCxpQ0FBZ0M7QXVCcGhDOUI7RUFDRSxvQ0FBMEI7VUFBMUIsNEJBQTBCO0V2QnNoQzdCOztBdUJuaENEO0VBQ0UsY0FBWTtFQUNaLGVBQWE7RXZCc2hDZDs7QUFFRCwyQkFBMEI7QXVCcGhDMUI7RUFDRSxrQkFBZ0I7RUFDaEIsc0NBQTRCO1VBQTVCLDhCQUE0QjtFQUU1QixvQkFBa0I7RXZCcWhDbkI7O0FBRUQsb0NBQW1DO0F1Qm5oQ25DO0VBQ0UscUNBQTJCO1VBQTNCLDZCQUEyQjtFQUUzQixvQkFBa0I7RUFDbEIsUUFBTTtFQUNOLFNBQU87RXZCb2hDUjs7QUFFRCxvQ0FBbUM7QXVCbGhDbkM7RUFDRSxZQUFVO0V2Qm9oQ1YscUJBQW9CO0V1QmxoQ3BCLGtDQUF3QjtVQUF4QiwwQkFBd0I7RXZCb2hDekI7O0FBRUQsa0NBQWlDO0F1QmxoQ2pDO0VBQ0Usb0NBQTBCO1VBQTFCLDRCQUEwQjtFdkJvaEMzQjs7QXVCL2dDQztFQUNFLFlBQVU7RUFDVixjQUFZO0V2QmtoQ2Y7QXVCaGhDQztFQUNFLDJCQUF5QjtFdkJraEM1QiIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUb29scyAqL1xuLypAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSSc7XG4gIHNyYzogdXJsKCd3ZWJmb250LmVvdCcpOyAqL1xuLyogSUU5IENvbXBhdCBNb2RlcyAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qXG5zcmM6IHVybCgnd2ViZm9udC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAqL1xuLyogSUU2LUlFOCAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLypcbnVybCgnd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgKi9cbi8qIFN1cGVyIE1vZGVybiBCcm93c2VycyAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qXG51cmwoJ3dlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLCAqL1xuLyogUHJldHR5IE1vZGVybiBCcm93c2VycyAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLypcbnVybCgnd2ViZm9udC50dGYnKSAgZm9ybWF0KCd0cnVldHlwZScpLCAqL1xuLyogU2FmYXJpLCBBbmRyb2lkLCBpT1MgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLypcbnVybCgnd2ViZm9udC5zdmcjc3ZnRm9udE5hbWUnKSBmb3JtYXQoJ3N2ZycpOyAqL1xuLyogTGVnYWN5IGlPUyAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLypcbn0qL1xuLypAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiU2Vnb2UgVUlcIjtcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL1RhaG9tYS1SZWd1bGFyLmVvdCcpOyAvISogSUU5IENvbXBhdCBNb2RlcyAqIS9cbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJUYWhvbWEtQm9sZFwiO1xuICBzcmM6IHVybCgnLi4vZm9udHMvVGFob21hLUJvbGQuZW90Jyk7IC8hKiBJRTkgQ29tcGF0IE1vZGVzICohL1xufSovXG5AaW1wb3J0IHVybChodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1MYXRvOjMwMCw0MDAsOTAwKTtcbkBpbXBvcnQgdXJsKGh0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsMzAwLDcwMCw2MDApO1xuLm1haW4taGVhZGVyOmJlZm9yZSwgLmxpc3QtaXRlbXM6YmVmb3JlLCAudXNlcjpiZWZvcmUsIC5tc2ctaW5wdXQ6YmVmb3JlLCAubWFpbi1oZWFkZXI6YWZ0ZXIsIC5saXN0LWl0ZW1zOmFmdGVyLCAudXNlcjphZnRlciwgLm1zZy1pbnB1dDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5tYWluLWhlYWRlcjphZnRlciwgLmxpc3QtaXRlbXM6YWZ0ZXIsIC51c2VyOmFmdGVyLCAubXNnLWlucHV0OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi8qIEJhc2UgKi9cbi8qISBub3JtYWxpemUuY3NzIHYzLjAuMiB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZSAqL1xuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXG4gKiAgICB1c2VyIHpvb20uXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5LCBodG1sIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YyRjJGMjtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xufVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbnVsIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5zZWxlY3Qge1xuICBib3JkZXI6IG5vbmU7XG59XG5cbmgxLCBwIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5ociB7XG4gIC8qICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBib3JkZXI6IDA7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjQTZBNkE2OyovXG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxudGV4dGFyZWEge1xuICByZXNpemU6IG5vbmU7XG59XG5cbi8qIE1vZHVsZXMgKi9cbi53cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA5My43NXJlbTtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5tYWluLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3RDc3QjI7XG4gIGJveC1zaGFkb3c6IDBweCAycHggNXB4ICM4ODg4ODg7XG59XG4ubWFpbi1oZWFkZXJfX2xvZ28ge1xuICBwYWRkaW5nOiAwLjc1cmVtIDEuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5tYWluLWhlYWRlcl9fdXNlciB7XG4gIGZsb2F0OiByaWdodDtcbiAgbWFyZ2luLXJpZ2h0OiAxLjI1cmVtO1xuICBtYXJnaW4tdG9wOiAwLjYyNXJlbTtcbn1cbi5tYWluLWhlYWRlcl9fcHJvamVjdCB7XG4gIG1hcmdpbi1sZWZ0OiAxLjg3NXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG4gIGxpbmUtaGVpZ2h0OiA3MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDAgMS4yNXJlbTtcbn1cbi5tYWluLWhlYWRlcl9fcHJvamVjdDpiZWZvcmUsIC5tYWluLWhlYWRlcl9fcHJvamVjdDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogNDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZDNkE5MztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuLm1haW4taGVhZGVyX19wcm9qZWN0OmJlZm9yZSB7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAwO1xufVxuLm1haW4taGVhZGVyX19wcm9qZWN0OmFmdGVyIHtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAwO1xufVxuXG4ubG9nbyBpbWcge1xuICB3aWR0aDogNy41cmVtO1xuICBoZWlnaHQ6IDIuODc1cmVtO1xufVxuXG4uY29udGVudCB7XG4gIG1hcmdpbi10b3A6IDYuMjVyZW07XG59XG4uY29udGVudF9faXRlbXMge1xuICBtYXJnaW4tdG9wOiA1JTtcbiAgcGFkZGluZy1sZWZ0OiA2LjI1cmVtO1xufVxuLmNvbnRlbnRfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1wiLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzdlODI4NztcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmNvbnRlbnRfX2xvZ2luIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nLXRvcDogMS44NzVyZW07XG59XG5cbi5saXN0X19pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNTAlO1xuICBmbG9hdDogbGVmdDtcbiAgcGFkZGluZzogMCAyLjVyZW07XG4gIHBhZGRpbmctbGVmdDogMi41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjc1cmVtO1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjN2U4Mjg3O1xuICBmb250LXNpemU6IDEuNTYyNXJlbTtcbn1cbi5saXN0X19pdGVtIC5zdWItdGV4dCB7XG4gIGZvbnQtc2l6ZTogMC45Mzc1cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBwYWRkaW5nLXRvcDogMS4yNXJlbTtcbn1cbi5saXN0X19pdGVtIGkge1xuICBjb2xvcjogIzdkNzdiMjtcbiAgZm9udC1zaXplOiAxLjg3NXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAlO1xuICBsZWZ0OiAwO1xufVxuXG4uYnRuLWxvZ2luLS1naXRodWIsIC5idG4tZW50ZXIsIC5idG4tbG9naW4tLXRyZWxsbywgLmJ0bi1sb2dpbi0tYml0YnVja2V0IHtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0Q3N0IyO1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDEuNzVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmJ0bi1sb2dpbi0tZ2l0aHViIHtcbiAgcGFkZGluZzogMC45Mzc1cmVtIDEuNTYyNXJlbSAwLjkzNzVyZW0gNC4xMjVyZW07XG4gIG1hcmdpbi1yaWdodDogMS4yNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY2NjY2Njtcbn1cbi5idG4tbG9naW4tLWdpdGh1YiBpIHtcbiAgZm9udC1zaXplOiAyLjM3NXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogMTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi5idG4tZW50ZXIge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAxLjU2MjVyZW07XG59XG5cbi5idG4tbG9naW4tLXRyZWxsbyB7XG4gIHBhZGRpbmc6IDAuOTM3NXJlbSAxLjU2MjVyZW0gMC45Mzc1cmVtIDQuMTI1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3OUJGO1xuICBtYXJnaW4tcmlnaHQ6IDEuMjVyZW07XG59XG4uYnRuLWxvZ2luLS10cmVsbG8gaSB7XG4gIGZvbnQtc2l6ZTogMi4zNzVyZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDEwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4uYnRuLWxvZ2luLS1iaXRidWNrZXQge1xuICBwYWRkaW5nOiAwLjkzNzVyZW0gMS41NjI1cmVtIDAuOTM3NXJlbSA0LjEyNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwNTA4MTtcbn1cbi5idG4tbG9naW4tLWJpdGJ1Y2tldCBpIHtcbiAgZm9udC1zaXplOiAyLjM3NXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogMTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi51c2VyX19hdmF0YXIge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNmZmY7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAwLjYyNXJlbTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi51c2VyX19hdmF0YXIgaW1nIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuLnVzZXJfX25hbWUge1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogMzAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4udXNlcl9fbmFtZS0tdGVhbSB7XG4gIGNvbG9yOiAjMDAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ucHJvamVjdC1zZWxlY3Qge1xuICB3aWR0aDogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDIuNXJlbSAwO1xuICBib3gtc2hhZG93OiAycHggM3B4IDhweCAjODg4ODg4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjglO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cbi5wcm9qZWN0LXNlbGVjdF9fc2VsZWN0IHtcbiAgd2lkdGg6IDg1JTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDIuNXJlbTtcbn1cbi5wcm9qZWN0LXNlbGVjdF9fdGl0bGUge1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1ib3R0b206IDEuODc1cmVtO1xuICBjb2xvcjogIzMwMzMzQTtcbn1cbi5wcm9qZWN0LXNlbGVjdF9fYnRuIHtcbiAgbWFyZ2luLXRvcDogNXJlbTtcbn1cbi5wcm9qZWN0LXNlbGVjdF9fY29udHJvbHMgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5wcm9qZWN0LXNlbGVjdF9fY29udHJvbHMgbGFiZWwge1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogIzMwMzMzQTtcbiAgbWFyZ2luLXJpZ2h0OiAzLjc1cmVtO1xufVxuLnByb2plY3Qtc2VsZWN0X19jb250cm9scyBpbnB1dFt0eXBlPVwicmFkaW9cIl0gKyBsYWJlbCBzcGFuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMjhweDtcbiAgaGVpZ2h0OiAyOHB4O1xuICBtYXJnaW4tcmlnaHQ6IDAuNjI1cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiAycHggc29saWQgI0E4QUFBRDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuLnByb2plY3Qtc2VsZWN0X19jb250cm9scyBpbnB1dFt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsIHNwYW46YWZ0ZXIge1xuICBjb250ZW50OiAnICc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiAxNXB4O1xuICBoZWlnaHQ6IDE1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdENzdCMjtcbn1cblxuLnVzZXItY29tbWVudCB7XG4gIG1hcmdpbjogMS4yNXJlbSAwO1xufVxuLnVzZXItY29tbWVudF9fYXZhdGFyIHtcbiAgd2lkdGg6IDQycHg7XG4gIGhlaWdodDogNDJweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXJnaW4tcmlnaHQ6IDAuOTM3NXJlbTtcbn1cbi51c2VyLWNvbW1lbnRfX2F2YXRhciBpbWcge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG59XG4udXNlci1jb21tZW50X190aW1lIHtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjNzI3NzdDO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZsb2F0OiByaWdodDtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG59XG4udXNlci1jb21tZW50X19uYW1lIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjNzI3NzdDO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG4udXNlci1jb21tZW50X19ib2R5IHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBtYXJnaW4tdG9wOiAxLjI1cmVtO1xufVxuXG4udGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA4MHB4O1xuICBtYXJnaW4tYm90dG9tOiAxLjI1cmVtO1xufVxuXG4udXNlcnMtY29tbWVudHNfX2NoYXQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMiU7XG4gIHdpZHRoOiA4OCU7XG59XG5cbi5zZWxlY3Qge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uc2VsZWN0X190aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBjb2xvcjogIzk5OTk5OTtcbiAgYm9yZGVyOiAycHggc29saWQgI0E4QUFBRDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgcGFkZGluZzogMC45Mzc1cmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uc2VsZWN0X19pdGVtcyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGNvbG9yOiAjNUY2NDc3O1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgYm94LXNoYWRvdzogMnB4IDNweCA4cHggIzg4ODg4ODtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBoZWlnaHQ6IDE1LjYyNXJlbTtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4uc2VsZWN0X19pdGVtIHtcbiAgcGFkZGluZzogMC43NXJlbSAxLjg3NXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnNlbGVjdF9faXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTUyLCAxNTgsIDE3NSwgMC4xKTtcbiAgY29sb3I6ICM0REM0RUE7XG59XG5cbi5pdGVtX19kZXNjIHtcbiAgb3BhY2l0eTogMC41O1xufVxuXG4uaXRlbV9fdGFza3Mge1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLnRhc2sge1xuICBtYXJnaW4tYm90dG9tOiAyLjVyZW07XG4gIG1hcmdpbi10b3A6IDEuODc1cmVtO1xufVxuLnRhc2tfX3RpdGxlIHtcbiAgY29sb3I6ICM3RDc3QjI7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICB3aWR0aDogNzUlO1xufVxuLnRhc2tfX3RvIHtcbiAgY29sb3I6ICM3Mjc3N0M7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZsb2F0OiByaWdodDtcbn1cbi50YXNrX19jb250ZW50IHtcbiAgY29sb3I6ICM4NDg0ODQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi50YXNrcyB7XG4gIHdpZHRoOiAyNXJlbTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi50YXNrX19idG4ge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMCAxLjI1cmVtIDEuMjVyZW0gMS4yNXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHotaW5kZXg6IDEwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEuMjVyZW0gMDtcbiAgYm94LXNoYWRvdzogMHB4IC0yMHB4IDMwcHggMHB4IHdoaXRlO1xufVxuXG4udGFza19fY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgYm90dG9tOiAwO1xuICBwYWRkaW5nOiA1LjQzNzVyZW0gMS4yNXJlbSAxMS4yNXJlbSAxLjI1cmVtO1xuICBvdmVyZmxvdzogYXV0bztcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ucGxheWdyb3VuZF9fdGl0bGUge1xuICBjb2xvcjogIzM0MzMzRDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMC42MjVyZW0gMCAyLjgxMjVyZW0gMDtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuLnBsYXlncm91bmRfX2NhcmRzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnBsYXlncm91bmRfX2NhcmRzIC5mbGlwLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDRyZW07XG59XG4ucGxheWdyb3VuZF9fdXNlcnMge1xuICBwYWRkaW5nOiAwLjYyNXJlbSAxLjI1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjREJEOUQ5O1xufVxuLnBsYXlncm91bmRfX3VzZXJzIC51c2VyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1yaWdodDogMS44NzVyZW07XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xufVxuXG4uY2FyZCB7XG4gIHdpZHRoOiA3JTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nLWJvdHRvbTogMiU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJveC1zaGFkb3c6IDFweCAzcHggNnB4ICM4ODg4ODg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tcmlnaHQ6IDAuNjI1cmVtO1xufVxuLmNhcmRfX3VzZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTI1cHg7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zOSUpO1xufVxuLmNhcmRfX3VzZXIgLnVzZXJfX2F2YXRhciB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG59XG4uY2FyZF9fcmF0ZSB7XG4gIGNvbG9yOiAjN0Q3N0IyO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgcGFkZGluZy10b3A6IDI1JTtcbn1cbi5jYXJkX19yYXRlLS1kaXMge1xuICBjb2xvcjogIzhGOTM5OTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmNhcmRfX2J0biB7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiAjOEU4RDhEO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMzBweDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTQ1JSk7XG59XG4uY2FyZF9fdXNlci1uYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiAjNzI3NzdDO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjU2MjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMjhweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLmNhcmQtc2VsZWN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RCRDlEOTtcbiAgcGFkZGluZzogMS4yNXJlbTtcbn1cblxuLmNhcmQtc2VsZWN0X19jYXJkcyAuY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDAuNzVyZW07XG59XG5cbi5jb250ZW50LXdyYXBwZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmNvbnRlbnRfX2hlYWRlciB7XG4gIGRpc3BsYXk6IHRhYmxlLXJvdztcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWFpbi1jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogdGFibGU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jb2wtMSB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5tYWluLWNvbnRlbnRfX3BsYXlncm91bmQge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLm1haW4tY29udGVudF9fY2FyZFNlbGVjdCB7XG4gIGhlaWdodDogMXB4O1xuICBkaXNwbGF5OiB0YWJsZS1yb3c7XG59XG5cbi5jb2wtMiB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHdpZHRoOiAyNXJlbTtcbn1cblxuLmNoYXQge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLm1zZy1pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwIDEuMjVyZW0gMS4yNXJlbSAxLjI1cmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgei1pbmRleDogMTA7XG59XG4ubXNnLWlucHV0IC5idG4tZW50ZXIge1xuICBmbG9hdDogcmlnaHQ7XG59XG4ubXNnLWlucHV0IC50ZXh0YXJlYSB7XG4gIGJveC1zaGFkb3c6IDBweCAtMjBweCAzMHB4IDBweCB3aGl0ZTtcbn1cblxuLm1zZy1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICBib3R0b206IDA7XG4gIHBhZGRpbmc6IDUuNDM3NXJlbSAwcmVtIDExLjI1cmVtIDEuMjVyZW07XG4gIG92ZXJmbG93OiBhdXRvO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5jb250ZW50LS1hY3RpdmUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnRhYl9fbmF2LS1hY3RpdmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogbm9ybWFsO1xufVxuLnRhYl9fbmF2LS1hY3RpdmU6YWZ0ZXIge1xuICBjb250ZW50OiAnICc7XG4gIHdpZHRoOiAxMDElO1xuICBoZWlnaHQ6IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdENzdCMjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi50YWIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm94LXNoYWRvdzogMnB4IDNweCA4cHggIzg4ODg4ODtcbn1cbi50YWJfX25hdiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGMkYyRjI7XG4gIHotaW5kZXg6IDEwMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cbi50YWJfX25hdiBsaSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHdpZHRoOiA1MCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAwLjY4NzVyZW07XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmbG9hdDogbGVmdDtcbiAgY29sb3I6ICMzMDMzM0E7XG4gIHBhZGRpbmc6IDEuMjVyZW0gMi44MTI1cmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjRDlEOURCO1xufVxuXG4udGFiX19jb250ZW50IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4vKiBNZWRpYSovXG4vKiBlbnRpcmUgY29udGFpbmVyLCBrZWVwcyBwZXJzcGVjdGl2ZSAqL1xuLmZsaXAtY29udGFpbmVyIHtcbiAgcGVyc3BlY3RpdmU6IDEwMDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyogZmxpcCB0aGUgcGFuZSB3aGVuIGhvdmVyZWQgKi9cbi5mbGlwLWNvbnRhaW5lcjpob3ZlciAuZmxpcHBlciwgLmZsaXAtY29udGFpbmVyLmhvdmVyIC5mbGlwcGVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XG59XG5cbi5mbGlwLWNvbnRhaW5lciwgLmZyb250LCAuYmFjayB7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiAxMDBweDtcbn1cblxuLyogZmxpcCBzcGVlZCBnb2VzIGhlcmUgKi9cbi5mbGlwcGVyIHtcbiAgdHJhbnNpdGlvbjogMC42cztcbiAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4vKiBoaWRlIGJhY2sgb2YgcGFuZSBkdXJpbmcgc3dhcCAqL1xuLmZyb250LCAuYmFjayB7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi8qIGZyb250IHBhbmUsIHBsYWNlZCBhYm92ZSBiYWNrICovXG4uZnJvbnQge1xuICB6LWluZGV4OiAyO1xuICAvKiBmb3IgZmlyZWZveCAzMSAqL1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoMGRlZyk7XG59XG5cbi8qIGJhY2ssIGluaXRpYWxseSBoaWRkZW4gcGFuZSAqL1xuLmJhY2sge1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoMTgwZGVnKTtcbn1cblxuLmZsaXAtY29udGFpbmVyIC5jYXJkIHtcbiAgd2lkdGg6IDcwJTtcbiAgaGVpZ2h0OiA4MHB4O1xufVxuLmZsaXAtY29udGFpbmVyIC5jYXJkLWJnIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdENzdCMjtcbn1cblxuXG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vID09IEZvbnRzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi8qQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSSc7XHJcbiAgc3JjOiB1cmwoJ3dlYmZvbnQuZW90Jyk7ICovLyogSUU5IENvbXBhdCBNb2RlcyAqLy8qXHJcbiAgc3JjOiB1cmwoJ3dlYmZvbnQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgKi8vKiBJRTYtSUU4ICovLypcclxuICB1cmwoJ3dlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksICovLyogU3VwZXIgTW9kZXJuIEJyb3dzZXJzICovLypcclxuICB1cmwoJ3dlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLCAqLy8qIFByZXR0eSBNb2Rlcm4gQnJvd3NlcnMgKi8vKlxyXG4gIHVybCgnd2ViZm9udC50dGYnKSAgZm9ybWF0KCd0cnVldHlwZScpLCAqLy8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovLypcclxuICB1cmwoJ3dlYmZvbnQuc3ZnI3N2Z0ZvbnROYW1lJykgZm9ybWF0KCdzdmcnKTsgKi8vKiBMZWdhY3kgaU9TICovLypcclxufSovXHJcblxyXG4vLyDQoNC+0LfQtNC10LvQuNC7INGI0YDQuNGE0YLRiyDQv9C+0YLQvtC80YMg0YfRgtC+INC40LUg0L3QtSDQstC40LTQtdGCINC/0L4g0LTRgNGD0LPQvtC80YNcclxuXHJcbi8vZm9yIGllXHJcbi8qQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiU2Vnb2UgVUlcIjtcclxuICBzcmM6IHVybCgnLi4vZm9udHMvVGFob21hLVJlZ3VsYXIuZW90Jyk7IC8hKiBJRTkgQ29tcGF0IE1vZGVzICohL1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBcIlRhaG9tYS1Cb2xkXCI7XHJcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL1RhaG9tYS1Cb2xkLmVvdCcpOyAvISogSUU5IENvbXBhdCBNb2RlcyAqIS9cclxufSovXHJcblxyXG4vL2ZvciBhbGxcclxuXHJcbi8vIEBmb250LWZhY2Uge1xyXG4vLyAgIGZvbnQtZmFtaWx5OiBcIkxhdG9cIjtcclxuLy8gICBzcmM6IHVybChcIi4uL2ZvbnRzL0xhdG8tUmVndWxhci50dGZcIik7XHJcbi8vIH1cclxuXHJcblxyXG5AaW1wb3J0IHVybChodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1MYXRvOjMwMCw0MDAsOTAwKTtcclxuQGltcG9ydCB1cmwoaHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9T3BlbitTYW5zOjQwMCwzMDAsNzAwLDYwMCk7IiwiXHJcbi8vIFN0cmlwIHRoZSB1bml0cyBmcm9tIGEgdmFsdWVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5AZnVuY3Rpb24gc3RyaXAtdW5pdHMoJHZhbHVlKSB7XHJcbiAgQHJldHVybiAkdmFsdWUgLyAoJHZhbHVlICogMCArIDEpO1xyXG59XHJcblxyXG4vLyBDYWxjdWxhdGUgcmVtcyBmcm9tIGEgcHggdmFsdWVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBmdW5jdGlvbiByZW0oJHB4LCAkYmFzZS12YWw6ICRiYXNlLXB4LWRlZmF1bHQpIHtcclxuICBAaWYgbm90IHVuaXRsZXNzKCRweCkge1xyXG4gICAgJHB4OiBzdHJpcC11bml0cygkcHgpO1xyXG4gIH1cclxuICBAaWYgbm90IHVuaXRsZXNzKCRiYXNlLXZhbCkge1xyXG4gICAgJGJhc2UtdmFsOiBzdHJpcC11bml0cygkYmFzZS12YWwpO1xyXG4gIH1cclxuICBAcmV0dXJuICgkcHggLyAkYmFzZS12YWwpICogMXJlbTtcclxuXHJcbn1cclxuXHJcbi8vIENsZWFyZml4XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4lY2xlYXJmaXgge1xyXG4gIC8vKnpvb206IDE7XHJcbiAgJjpiZWZvcmUsICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCIgXCI7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICB9XHJcbiAgJjphZnRlciB7XHJcbiAgICBjbGVhcjogYm90aDtcclxuICB9XHJcbn1cclxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovXHJcblxyXG4vKipcclxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cclxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXHJcbiAqICAgIHVzZXIgem9vbS5cclxuICovXHJcblxyXG5odG1sIHtcclxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xyXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXHJcbiAqL1xyXG5cclxuYm9keSB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcclxuICogYW5kIEZpcmVmb3guXHJcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXHJcbiAqL1xyXG5cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmRldGFpbHMsXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbm1haW4sXHJcbm1lbnUsXHJcbm5hdixcclxuc2VjdGlvbixcclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxyXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xyXG5cclxuYXVkaW8sXHJcbmNhbnZhcyxcclxucHJvZ3Jlc3MsXHJcbnZpZGVvIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXHJcbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXHJcbiAqL1xyXG5cclxuYXVkaW86bm90KFtjb250cm9sc10pIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIGhlaWdodDogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cclxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxyXG4gKi9cclxuXHJcbltoaWRkZW5dLFxyXG50ZW1wbGF0ZSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLyogTGlua3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICovXHJcblxyXG5hIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmE6YWN0aXZlLFxyXG5hOmhvdmVyIHtcclxuICBvdXRsaW5lOiAwO1xyXG59XHJcblxyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cclxuICovXHJcblxyXG5hYmJyW3RpdGxlXSB7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cclxuICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxyXG4gKi9cclxuXHJcbmRmbiB7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxyXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXHJcbiAqL1xyXG5cclxuaDEge1xyXG4gIGZvbnQtc2l6ZTogMmVtO1xyXG4gIG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxyXG4gKi9cclxuXHJcbm1hcmsge1xyXG4gIGJhY2tncm91bmQ6ICNmZjA7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1cCB7XHJcbiAgdG9wOiAtMC41ZW07XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tOiAtMC4yNWVtO1xyXG59XHJcblxyXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXHJcbiAqL1xyXG5cclxuaW1nIHtcclxuICBib3JkZXI6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cclxuICovXHJcblxyXG5zdmc6bm90KDpyb290KSB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLyogR3JvdXBpbmcgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmZpZ3VyZSB7XHJcbiAgbWFyZ2luOiAxZW0gNDBweDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cclxuICovXHJcblxyXG5ociB7XHJcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5wcmUge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmNvZGUsXHJcbmtiZCxcclxucHJlLFxyXG5zYW1wIHtcclxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XHJcbiAgZm9udC1zaXplOiAxZW07XHJcbn1cclxuXHJcbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcclxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXHJcbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxyXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxyXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0OyAvKiAyICovXHJcbiAgbWFyZ2luOiAwOyAvKiAzICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cclxuICovXHJcblxyXG5idXR0b24ge1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxyXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxyXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxyXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5zZWxlY3Qge1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcclxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXHJcbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cclxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcclxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXHJcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcclxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cclxuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXHJcbiAqL1xyXG5cclxuYnV0dG9uW2Rpc2FibGVkXSxcclxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cclxuICovXHJcblxyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcclxuICBib3JkZXI6IDA7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cclxuICogdGhlIFVBIHN0eWxlc2hlZXQuXHJcbiAqL1xyXG5cclxuaW5wdXQge1xyXG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXHJcbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXHJcbiAqXHJcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXHJcbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXHJcbiAqL1xyXG5cclxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxyXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBwYWRkaW5nOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxyXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxyXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXHJcbiAqL1xyXG5cclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXHJcbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcclxuICogICAgKGluY2x1ZGUgYC1tb3pgIHRvIGZ1dHVyZS1wcm9vZikuXHJcbiAqL1xyXG5cclxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cclxuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cclxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxyXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXHJcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cclxuICovXHJcblxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXHJcbiAqL1xyXG5cclxuZmllbGRzZXQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XHJcbiAgbWFyZ2luOiAwIDJweDtcclxuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXHJcbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGJvcmRlcjogMDsgLyogMSAqL1xyXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXHJcbiAqL1xyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxyXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cclxuICovXHJcblxyXG5vcHRncm91cCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi8qIFRhYmxlc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cclxuICovXHJcblxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBib3JkZXItc3BhY2luZzogMDtcclxufVxyXG5cclxudGQsXHJcbnRoIHtcclxuICBwYWRkaW5nOiAwO1xyXG59IiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyA9PSBCYXNlXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XHJcblxyXG5ib2R5LCBodG1seyBoZWlnaHQ6MTAwJTt9XHJcblxyXG5ib2R5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGMkYyO1xyXG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250O1xyXG59XHJcblxyXG51bCBsaSB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxudWwge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbnNlbGVjdCB7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG5oMSwgcCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmhyIHtcclxuLyogIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGhlaWdodDogMXB4O1xyXG4gIGJvcmRlcjogMDsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNBNkE2QTY7Ki9cclxufVxyXG5cclxuaW1nIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRleHRhcmVhIHtcclxuICByZXNpemU6IG5vbmU7XHJcbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vID09IFNpdGUgc2V0dGluZ3NcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy9Gb250IHNpemVcclxuJGJhc2UtcHgtZGVmYXVsdDogMTZweCAhZGVmYXVsdDtcclxuXHJcbi8vID0gRm9udHNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuJGJhc2UtZm9udDogJ0xhdG8nLCBzYW5zLXNlcmlmO1xyXG4kc2Vjb25kYXJ5LWZvbnQ6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4vLyA9IENvbG9yc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy9Gb3IgbmFtaW5nIGNvbG9ycywgSSB1c2VkIFwiTmFtZSB0aGF0IENvbG9yXCJcclxuXHJcblxyXG4iLCIvLyBDb250YWluZXIgbW9kdWxlXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLndyYXBwZXIge1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiByZW0oMTUwMCk7XHJcbiAgd2lkdGg6IDkwJTtcclxuICBtYXJnaW46IDAgYXV0bztcclxufSIsIi8vIE1haW4taGVhZGVyIG1vZHVsZVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi5tYWluLWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdENzdCMjtcclxuICBib3gtc2hhZG93OiAwcHggMnB4IDVweCAjODg4ODg4O1xyXG4gIEBleHRlbmQgJWNsZWFyZml4O1xyXG5cclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIHBhZGRpbmc6IHJlbSgxMikgcmVtKDIwKTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdXNlciB7XHJcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogcmVtKDIwKTtcclxuICAgICAgICBtYXJnaW4tdG9wOiByZW0oMTApO1xyXG4gICAgfVxyXG4gICAgJl9fcHJvamVjdCB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiByZW0oMzApO1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkc2Vjb25kYXJ5LWZvbnQ7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxOCk7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiA3MHB4O1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHBhZGRpbmc6IDAgcmVtKDIwKTtcclxuICAgICAgICAmOmJlZm9yZSwgJjphZnRlciAge1xyXG4gICAgICAgICAgY29udGVudDogXCIgXCI7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICB3aWR0aDogMXB4O1xyXG4gICAgICAgICAgaGVpZ2h0OiA0NHB4O1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzZDNkE5MztcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLy8gTG9nbyBtb2R1bGVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4ubG9nbyB7XHJcbiAgICBpbWcge1xyXG4gICAgICB3aWR0aDogcmVtKDEyMCk7XHJcbiAgICAgIGhlaWdodDogcmVtKDQ2KTtcclxuICAgIH1cclxufSIsIi8vIENvbnRlbnQgbW9kdWxlXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuXHJcbi5jb250ZW50IHtcclxuICBtYXJnaW4tdG9wOiByZW0oMTAwKTtcclxuICAmX19pdGVtcyB7XHJcbiAgICBtYXJnaW4tdG9wOiA1JTtcclxuICAgIHBhZGRpbmctbGVmdDogcmVtKDEwMCk7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBmb250LWZhbWlseTogJGJhc2UtZm9udDtcclxuICAgIGNvbG9yOiAjN2U4Mjg3O1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgJl9fbG9naW4ge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IHJlbSgzMCk7XHJcbiAgfVxyXG59IiwiLy8gTGlzdC1pdGVtcyBtb2R1bGVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4ubGlzdC1pdGVtcyB7XHJcbiAgQGV4dGVuZCAlY2xlYXJmaXg7XHJcbn1cclxuXHJcbi5saXN0X19pdGVtIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBmbG9hdDogbGVmdDtcclxuICBwYWRkaW5nOiAwIHJlbSg0MCk7XHJcbiAgcGFkZGluZy1sZWZ0OiByZW0oNDApO1xyXG4gIG1hcmdpbi1ib3R0b206IHJlbSgxMik7XHJcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQ7XHJcbiAgY29sb3I6ICM3ZTgyODc7XHJcbiAgZm9udC1zaXplOiByZW0oMjUpO1xyXG4gIC5zdWItdGV4dCB7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNSk7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgcGFkZGluZy10b3A6IHJlbSgyMCk7XHJcbiAgfVxyXG4gIGkge1xyXG4gICAgY29sb3I6ICM3ZDc3YjI7XHJcbiAgICBmb250LXNpemU6IHJlbSgzMCk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDAlO1xyXG4gICAgbGVmdDogMDtcclxuICB9XHJcbn0iLCIvLyBCdXR0b25zIG1vZHVsZVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiVidG4ge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM3RDc3QjI7XHJcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQ7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgZm9udC1zaXplOiByZW0oMjApO1xyXG4gIGJvcmRlci1yYWRpdXM6IHJlbSgyOCk7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uYnRuLWxvZ2luLS1naXRodWIge1xyXG4gIHBhZGRpbmc6IHJlbSgxNSkgcmVtKDI1KSByZW0oMTUpIHJlbSg2Nik7XHJcbiAgbWFyZ2luLXJpZ2h0OiByZW0oMjApO1xyXG4gIEBleHRlbmQgJWJ0bjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjY2NjY2O1xyXG4gICAgaSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDM4KTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbGVmdDogMTAlO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5idG4tZW50ZXIge1xyXG4gIEBleHRlbmQgJWJ0bjtcclxuICBwYWRkaW5nOiByZW0oMTApIHJlbSgyNSk7XHJcbn1cclxuXHJcbi5idG4tbG9naW4tLXRyZWxsbyB7XHJcbiAgcGFkZGluZzogcmVtKDE1KSByZW0oMjUpIHJlbSgxNSkgcmVtKDY2KTtcclxuICBAZXh0ZW5kICVidG47XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzlCRjtcclxuICBtYXJnaW4tcmlnaHQ6IHJlbSgyMCk7XHJcbiAgICBpIHtcclxuICAgICAgZm9udC1zaXplOiByZW0oMzgpO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICBsZWZ0OiAxMCU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIH1cclxufVxyXG5cclxuLmJ0bi1sb2dpbi0tYml0YnVja2V0IHtcclxuICBwYWRkaW5nOiByZW0oMTUpIHJlbSgyNSkgcmVtKDE1KSByZW0oNjYpO1xyXG4gIEBleHRlbmQgJWJ0bjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA1MDgxO1xyXG4gICAgaSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDM4KTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbGVmdDogMTAlO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICB9XHJcbn0iLCIvLyBVc2VyIG1vZHVsZVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG4udXNlciB7XHJcbiAgQGV4dGVuZCAlY2xlYXJmaXg7XHJcbiAgJl9fYXZhdGFyIHtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgI2ZmZjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi1yaWdodDogcmVtKDEwKTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICB9XHJcbiAgfVxyXG5cclxuICAmX19uYW1lIHtcclxuICAgIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIH1cclxuICAmX19uYW1lLS10ZWFtIHtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG59IiwiLy8gUHJvamVjdC1zZWxlY3QgbW9kdWxlXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLnByb2plY3Qtc2VsZWN0IHtcclxuICB3aWR0aDogNTAlOyAgLy9zZXQgd2lkdGggb25seSB0byBlbGVtZW50IHRoYXQgY29udGFpbmUgdGhpcyBtb2R1bGVcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiByZW0oNDApIDA7XHJcbiAgYm94LXNoYWRvdzogMnB4IDNweCA4cHggIzg4ODg4ODtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAyOCU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuXHJcbiAgJl9fc2VsZWN0IHtcclxuICAgIHdpZHRoOiA4NSU7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIG1hcmdpbi1ib3R0b206IHJlbSg0MCk7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBmb250LWZhbWlseSA6ICRzZWNvbmRhcnktZm9udDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDMwKTtcclxuICAgIGNvbG9yOiAjMzAzMzNBO1xyXG4gIH1cclxuXHJcbiAgJl9fYnRuIHtcclxuICAgIG1hcmdpbi10b3A6IHJlbSg4MCk7XHJcbiAgfVxyXG5cclxuICAmX19jb250cm9scyB7XHJcblxyXG4gICAgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcclxuICAgICAgICBkaXNwbGF5Om5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgbGFiZWwge1xyXG4gICAgICBmb250LWZhbWlseSA6ICRzZWNvbmRhcnktZm9udDtcclxuICAgICAgZm9udC1zaXplIDogcmVtKDE2KTtcclxuICAgICAgY29sb3IgOiAjMzAzMzNBO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IHJlbSg2MCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5wdXRbdHlwZT1cInJhZGlvXCJdICsgbGFiZWwgc3BhbiB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAyOHB4O1xyXG4gICAgICAgIGhlaWdodDogMjhweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IHJlbSgxMCk7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNBOEFBQUQ7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcblxyXG4gICAgaW5wdXRbdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbCBzcGFue1xyXG4gICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgIGNvbnRlbnQ6ICcgJztcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICB3aWR0aDogMTVweDtcclxuICAgICAgICAgIGhlaWdodDogMTVweDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM3RDc3QjI7XHJcbiAgICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgfVxyXG59IiwiLy8gVXNlciBjb21tZW50IG1vZHVsZVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi51c2VyLWNvbW1lbnQge1xyXG4gIG1hcmdpbjogMS4yNXJlbSAwO1xyXG4gICZfX2F2YXRhciB7XHJcbiAgICB3aWR0aDogNDJweDtcclxuICAgIGhlaWdodDogNDJweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IHJlbSgxNSk7XHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICAgIH1cclxuICB9XHJcblxyXG4gICZfX3RpbWUge1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtZmFtaWx5OiAkc2Vjb25kYXJ5LWZvbnQ7XHJcbiAgICBjb2xvcjogIzcyNzc3QztcclxuICAgIGZvbnQtc2l6ZTogcmVtKDEyKTtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fbmFtZSB7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgZm9udC1mYW1pbHk6ICRzZWNvbmRhcnktZm9udDtcclxuICAgIGNvbG9yOiAjNzI3NzdDO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcblxyXG4gICZfX2JvZHkge1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gICAgZm9udC1zaXplOiByZW0oMTMpO1xyXG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbiAgICBmb250LWZhbWlseTogJHNlY29uZGFyeS1mb250O1xyXG4gICAgbWFyZ2luLXRvcDogcmVtKDIwKTtcclxuICB9XHJcbn1cclxuXHJcbi50ZXh0YXJlYSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEuMjVyZW07XHJcbn1cclxuXHJcbi51c2Vycy1jb21tZW50c19fY2hhdCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogMiU7XHJcbiAgd2lkdGg6IDg4JTtcclxuICAvLyBib3gtc2hhZG93OiAwcHggLTU1cHggMzBweCAwcHggd2hpdGU7XHJcbn0iLCIvLyBTZWxlY3QgbW9kdWxlXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLnNlbGVjdCB7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgJl9fdGl0bGUge1xyXG4gICAgZm9udC1mYW1pbHk6ICRzZWNvbmRhcnktZm9udDtcclxuICAgIGZvbnQtc2l6ZTogcmVtKDE0KTtcclxuICAgIGNvbG9yOiAjOTk5OTk5O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI0E4QUFBRDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBwYWRkaW5nOiByZW0oMTUpO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuXHJcbiAgJl9faXRlbXMge1xyXG4gICAgZGlzcGxheTogbm9uZTsgLy8vLy9WaXN1YWwgdG9nZ2xlXHJcbiAgICBjb2xvcjogIzVGNjQ3NztcclxuICAgIGZvbnQtZmFtaWx5OiAkc2Vjb25kYXJ5LWZvbnQ7XHJcbiAgICBmb250LXNpemU6IHJlbSgxNCk7XHJcbiAgICBib3gtc2hhZG93OiAycHggM3B4IDhweCAjODg4ODg4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgaGVpZ2h0OiByZW0oMjUwKTtcclxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICB9XHJcbn1cclxuXHJcbi5zZWxlY3RfX2l0ZW0ge1xyXG4gIHBhZGRpbmc6IHJlbSgxMikgcmVtKDMwKTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNTIsIDE1OCwgMTc1LCAuMSk7XHJcbiAgICAgIGNvbG9yOiAjNERDNEVBO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaXRlbV9fZGVzYyB7XHJcbiAgb3BhY2l0eTogMC41O1xyXG59XHJcblxyXG4uaXRlbV9fdGFza3Mge1xyXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgZm9udC1zaXplOiByZW0oMTIpO1xyXG4gIGZsb2F0OiByaWdodDtcclxufSIsIi8vIFRhc2tzIG1vZHVsZVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG4udGFzayB7XHJcbiAgbWFyZ2luLWJvdHRvbTogcmVtKDQwKTtcclxuICBtYXJnaW4tdG9wOiByZW0oMzApO1xyXG4gICZfX3RpdGxlIHtcclxuICAgIGNvbG9yOiAjN0Q3N0IyO1xyXG4gICAgZm9udC1mYW1pbHkgOiAkc2Vjb25kYXJ5LWZvbnQ7XHJcbiAgICBmb250LXNpemUgOiByZW0oMTQpO1xyXG4gICAgd2lkdGg6IDc1JTtcclxuICB9XHJcbiAgJl9fdG8ge1xyXG4gICAgY29sb3I6ICM3Mjc3N0M7XHJcbiAgICBmb250LWZhbWlseSA6ICRzZWNvbmRhcnktZm9udDtcclxuICAgIGZvbnQtc2l6ZSA6IHJlbSgxMik7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgfVxyXG4gICZfX2NvbnRlbnQge1xyXG4gICAgY29sb3I6ICM4NDg0ODQ7XHJcbiAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gIH1cclxufVxyXG5cclxuLnRhc2tzIHtcclxuICB3aWR0aDogcmVtKDQwMCk7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4udGFza19fYnRuIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAwIHJlbSgyMCkgcmVtKDIwKSByZW0oMjApO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBib3R0b206IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB6LWluZGV4OiAxMDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogcmVtKDIwKSAwO1xyXG4gIGJveC1zaGFkb3c6IDBweCAtMjBweCAzMHB4IDBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xyXG59XHJcblxyXG4udGFza19fY29udGFpbmVyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgei1pbmRleDogMTtcclxuICBib3R0b206IDA7XHJcbiAgcGFkZGluZzogcmVtKDg3KSByZW0oMjApIHJlbSgxODApIHJlbSgyMCk7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59IiwiLy8gcGxheWdyb3VuZCBtb2R1bGVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4ucGxheWdyb3VuZCB7XHJcbiAgJl9fdGl0bGUge1xyXG4gICAgY29sb3I6ICMzNDMzM0Q7XHJcbiAgICBmb250LWZhbWlseTogJHNlY29uZGFyeS1mb250O1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IHJlbSgxMCkgMCByZW0oNDUpIDA7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIH1cclxuICAmX19jYXJkcyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIC5mbGlwLWNvbnRhaW5lciB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcclxuICAgICAgfVxyXG4gIH1cclxuICAmX191c2VycyB7XHJcbiAgICBwYWRkaW5nOiByZW0oMTApIHJlbSgyMCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjREJEOUQ5O1xyXG4gICAgLnVzZXIge1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgbWFyZ2luLXJpZ2h0OiByZW0oMzApO1xyXG4gICAgICBmb250LXNpemU6IHJlbSgxMyk7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLy8gY2FyZCBtb2R1bGVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4uY2FyZCB7XHJcbiAgd2lkdGg6IDclO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nLWJvdHRvbTogMiU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3gtc2hhZG93OiAxcHggM3B4IDZweCAjODg4ODg4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBtYXJnaW4tcmlnaHQ6IHJlbSgxMCk7XHJcbiAgICAmX191c2VyIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IC0yNXB4O1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzklKTtcclxuICAgICAgIC51c2VyX19hdmF0YXIge1xyXG4gICAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19yYXRlIHtcclxuICAgICAgY29sb3I6ICM3RDc3QjI7XHJcbiAgICAgIGZvbnQtZmFtaWx5IDogJHNlY29uZGFyeS1mb250O1xyXG4gICAgICBmb250LXdlaWdodCA6IGJvbGQ7XHJcbiAgICAgIGZvbnQtc2l6ZSA6IHJlbSgyMCk7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAyNSU7XHJcbiAgICB9XHJcbiAgICAmX19yYXRlLS1kaXMge1xyXG4gICAgICBjb2xvcjogIzhGOTM5OTtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gICAgJl9fYnRuIHtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgY29sb3I6ICM4RThEOEQ7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IC0zMHB4O1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDUlKTtcclxuICAgIH1cclxuICAgICZfX3VzZXItbmFtZSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBjb2xvcjogIzcyNzc3QztcclxuICAgICAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgIGZvbnQtc2l6ZTogcmVtKDkpO1xyXG4gICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJvdHRvbTogLTI4cHg7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICB9XHJcbn0iLCIvLyBjYXJkLXNlbGVjdCBtb2R1bGVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4uY2FyZC1zZWxlY3Qge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEQkQ5RDk7XHJcbiAgcGFkZGluZzogcmVtKDIwKTtcclxufVxyXG5cclxuLmNhcmQtc2VsZWN0X19jYXJkcyAuY2FyZCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMC43NXJlbTtcclxufSIsIi8vbWFpbiBwYWdlIGxheW91dFxyXG5cclxuLmNvbnRlbnQtd3JhcHBlciB7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uY29udGVudF9faGVhZGVyIHtcclxuICBkaXNwbGF5OiB0YWJsZS1yb3c7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYWluLWNvbnRlbnQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBkaXNwbGF5OiB0YWJsZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uY29sLTEge1xyXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLm1haW4tY29udGVudF9fcGxheWdyb3VuZCB7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1jb250ZW50X19jYXJkU2VsZWN0IHtcclxuICBoZWlnaHQ6IDFweDtcclxuICBkaXNwbGF5OiB0YWJsZS1yb3c7XHJcbn1cclxuXHJcbi5jb2wtMiB7XHJcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICB3aWR0aDogMjVyZW07XHJcbn0iLCJcclxuLmNoYXQge1xyXG4gIC8vIHdpZHRoOiByZW0oNDAwKTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5tc2ctaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDAgcmVtKDIwKSByZW0oMjApIHJlbSgyMCk7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIHotaW5kZXg6IDEwO1xyXG4gIEBleHRlbmQgJWNsZWFyZml4O1xyXG4gICAgLmJ0bi1lbnRlciB7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuICAgIH1cclxuICAgIC50ZXh0YXJlYSB7XHJcbiAgICAgIGJveC1zaGFkb3c6IDBweCAtMjBweCAzMHB4IDBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubXNnLWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHBhZGRpbmc6IHJlbSg4NykgcmVtKDApIHJlbSgxODApIHJlbSgyMCk7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59IiwiLy8gVGFiIG1vZHVsZVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbi5jb250ZW50LS1hY3RpdmUge1xyXG4gICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLnRhYl9fbmF2LS1hY3RpdmUge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBjdXJzb3I6IG5vcm1hbDtcclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICcgJztcclxuICAgIHdpZHRoOiAxMDElO1xyXG4gICAgaGVpZ2h0OiA0cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0Q3N0IyO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICB9XHJcbn1cclxuXHJcbi50YWIge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3gtc2hhZG93OiAycHggM3B4IDhweCAjODg4ODg4O1xyXG4gICZfX25hdiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGMkYyO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGxpIHtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBmb250LXNpemU6IHJlbSgxMSk7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRzZWNvbmRhcnktZm9udDtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBjb2xvcjogIzMwMzMzQTtcclxuICAgICAgICBwYWRkaW5nOiByZW0oMjApIHJlbSg0NSk7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0Q5RDlEQjtcclxuICAgICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnRhYl9fY29udGVudCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59IiwiLyogVG9vbHMgKi9cclxuQGltcG9ydCBcInRvb2xzL2ZvbnRzXCI7XHJcbkBpbXBvcnQgXCJ0b29scy9zaXRlLXNldHRpbmdzXCI7XHJcbkBpbXBvcnQgXCJ0b29scy9mdW5jdGlvbnNcIjtcclxuLy8gQGltcG9ydCBcInRvb2xzL2ljb25zXCI7XHJcblxyXG4vKiBCYXNlICovXHJcbkBpbXBvcnQgXCJiYXNlL25vcm1hbGl6ZVwiO1xyXG5AaW1wb3J0IFwiYmFzZS9iYXNlXCI7XHJcblxyXG5cclxuLyogTW9kdWxlcyAqL1xyXG5AaW1wb3J0IFwibW9kdWxlcy9jb250YWluZXJcIjtcclxuQGltcG9ydCBcIm1vZHVsZXMvbWFpbi1oZWFkZXJcIjtcclxuQGltcG9ydCBcIm1vZHVsZXMvbG9nb1wiO1xyXG5AaW1wb3J0IFwibW9kdWxlcy9jb250ZW50XCI7XHJcbkBpbXBvcnQgXCJtb2R1bGVzL2xpc3QtaXRlbXNcIjtcclxuQGltcG9ydCBcIm1vZHVsZXMvYnV0dG9uc1wiO1xyXG5AaW1wb3J0IFwibW9kdWxlcy91c2VyXCI7XHJcbkBpbXBvcnQgXCJtb2R1bGVzL3Byb2plY3Qtc2VsZWN0XCI7XHJcbkBpbXBvcnQgXCJtb2R1bGVzL3VzZXItY29tbWVudFwiO1xyXG5AaW1wb3J0IFwibW9kdWxlcy9zZWxlY3RcIjtcclxuQGltcG9ydCBcIm1vZHVsZXMvdGFza3NcIjtcclxuQGltcG9ydCBcIm1vZHVsZXMvcGxheWdyb3VuZFwiO1xyXG5AaW1wb3J0IFwibW9kdWxlcy9jYXJkXCI7XHJcbkBpbXBvcnQgXCJtb2R1bGVzL2NhcmQtc2VsZWN0XCI7XHJcbkBpbXBvcnQgXCJtb2R1bGVzL21haW4tcGFnZVwiO1xyXG5AaW1wb3J0IFwibW9kdWxlcy9jaGF0XCI7XHJcbkBpbXBvcnQgXCJtb2R1bGVzL3RhYlwiO1xyXG4vLyBAaW1wb3J0IFwibW9kdWxlcy9zY3JvbGxcIjtcclxuXHJcblxyXG5cclxuLyogTWVkaWEqL1xyXG4vLyBAaW1wb3J0IFwidG9vbHMvbWVkaWFcIjtcclxuXHJcblxyXG4vKiBlbnRpcmUgY29udGFpbmVyLCBrZWVwcyBwZXJzcGVjdGl2ZSAqL1xyXG4uZmxpcC1jb250YWluZXIge1xyXG4gIHBlcnNwZWN0aXZlOiAxMDAwO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG4gIC8qIGZsaXAgdGhlIHBhbmUgd2hlbiBob3ZlcmVkICovXHJcbiAgLmZsaXAtY29udGFpbmVyOmhvdmVyIC5mbGlwcGVyLCAuZmxpcC1jb250YWluZXIuaG92ZXIgLmZsaXBwZXIge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XHJcbiAgfVxyXG5cclxuLmZsaXAtY29udGFpbmVyLCAuZnJvbnQsIC5iYWNrIHtcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgaGVpZ2h0OiAxMDBweDtcclxufVxyXG5cclxuLyogZmxpcCBzcGVlZCBnb2VzIGhlcmUgKi9cclxuLmZsaXBwZXIge1xyXG4gIHRyYW5zaXRpb246IDAuNnM7XHJcbiAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcclxuXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4vKiBoaWRlIGJhY2sgb2YgcGFuZSBkdXJpbmcgc3dhcCAqL1xyXG4uZnJvbnQsIC5iYWNrIHtcclxuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XHJcblxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxufVxyXG5cclxuLyogZnJvbnQgcGFuZSwgcGxhY2VkIGFib3ZlIGJhY2sgKi9cclxuLmZyb250IHtcclxuICB6LWluZGV4OiAyO1xyXG4gIC8qIGZvciBmaXJlZm94IDMxICovXHJcbiAgdHJhbnNmb3JtOiByb3RhdGVZKDBkZWcpO1xyXG59XHJcblxyXG4vKiBiYWNrLCBpbml0aWFsbHkgaGlkZGVuIHBhbmUgKi9cclxuLmJhY2sge1xyXG4gIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpO1xyXG59XHJcblxyXG5cclxuLmZsaXAtY29udGFpbmVyIHtcclxuICAuY2FyZCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgaGVpZ2h0OiA4MHB4O1xyXG4gIH1cclxuICAuY2FyZC1iZyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0Q3N0IyO1xyXG4gIH1cclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */